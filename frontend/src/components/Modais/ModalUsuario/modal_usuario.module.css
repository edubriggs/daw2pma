.modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal {
    background-color: #333;
    padding: 2rem;
    border-radius: 0.5rem;
    box-shadow: 0 0 0.625rem rgba(0, 0, 0, 0.3);
    width: 18.75rem;
    height: 28rem;
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modal label {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
    color: #fff;
}

.modal input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1rem;
    border: 0.063rem solid #ccc;
    border-radius: 0.5rem;
    font-size: 1rem;
    background-color: #555;
    color: #fff;
}

.modal button:not(.closeButton) {
    width: 100%;
    padding: 0.75rem;
    border: none;
    border-radius: 0.5rem;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-bottom: 0.5rem;
    color: #fff;
}

.modal button:hover:not(.closeButton) {
    background-color: #666;
}

.closeButton {
    position: absolute;
    top: 0.6rem;
    right: 0.6rem;
    background: transparent;
    border: none;
    font-size: 1rem;
    cursor: pointer;
    color: #ffffff;
    padding: 0;
    margin: 0;
    line-height: 1;
}

.modal button:disabled {
    background-color: #999;
    cursor: not-allowed;
}


.buttonContainer {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
}

.editButton {
    background-color: #4CAF50;
}

.editButton:hover {
    background-color: #45a049;
}

.removeButton {
    background-color: #f44336;
}

.removeButton:hover {
    background-color: #e53935;
}

.successModal {
    position: fixed;
    top: 5%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #ffffff;
    color: #000000;
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 0 0.625rem rgba(0, 0, 0, 0.3);
    z-index: 1100;
    text-align: center;
    animation: fadeInOut 1.5s ease-in-out forwards;
}

@keyframes fadeInOut {
    0% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.9);
    }
    10% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    90% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.9);
    }
}
